import argparse

import matplotlib.pyplot as plt
from PIL import Image

import mnist.ml.engines.inference_engine as inf_eng
import mnist.paths as paths
from mnist.custom_utils.logger import std_logger as logger


def main():
    parser = argparse.ArgumentParser(description='Predict the digit'
                                                 'represented in the provided'
                                                 'images.')
    parser.add_argument('image_paths',
                        type=str,
                        nargs='+',
                        help='Path to the image to predict on')
    parser.add_argument('--show',
                        action='store_true',
                        help='If set, the input images are displayed,'
                             'with prediction as a title.')

    args = parser.parse_args()
    image_paths = args.image_paths
    show = args.show

    with inf_eng.InferenceEngine() as inference_engine:
        predictions, probabilities = \
            inference_engine.load_preprocess_and_predict(image_paths)

    logger.info('Predictions generated by model: '
                '{}'.format(paths.Checkpoints.BEST_MODEL))
    for image_path, pred, probs in zip(image_paths,
                                       predictions,
                                       probabilities):
        print('Image: {}\n'
              '  Prediction: {}\n'
              '  Probabilities: [{}]'.format(image_path,
                                             pred,
                                             ', '.join(['{:.3f}'.format(p)
                                                        for p in probs])))

        if show:
            pil_image = Image.open(image_path)
            title = 'Prediction: {}\n' \
                    'with probability: {:.3f}'.format(pred, probs[pred])
            plt.figure()
            plt.imshow(pil_image, cmap='gray')
            plt.title(title)
            plt.axis('off')
            plt.show()
            plt.close()


if __name__ == '__main__':
    main()
